diff -r 319dc814102b Makefile
--- a/Makefile	Mon Jun 18 09:09:15 2012 +0200
+++ b/Makefile	Thu Sep 27 23:43:22 2012 +0900
@@ -19,7 +19,10 @@
 endif
 ifeq ($(ARCH),i386/)
 LDSO_FILE=/lib/ld-linux.so.2
-LIBDL_FILE=/lib/libdl.so.2
+LIBDL_FILES= \
+ /lib/i386-linux-gnu/libdl.so.2 \
+ /lib/libdl.so.2
+LIBDL_FILE=$(foreach file,$(LIBDL_FILES),$(wildcard $(file)))
 else ifeq ($(ARCH),x86_64/)
 LDSO_FILES= \
  /lib/x86_64-linux-gnu/ld-linux-x86-64.so.2 \
@@ -139,4 +142,4 @@
 	mkdir -p test
 	$(MAKE) -C test -f $(SRCDIR)test/Makefile clean
 
--include $(SRC:%.o=.%.o.d)
\ No newline at end of file
+-include $(SRC:%.o=.%.o.d)
diff -r 319dc814102b extract-system-config.py
--- a/extract-system-config.py	Mon Jun 18 09:09:15 2012 +0200
+++ b/extract-system-config.py	Thu Sep 27 23:43:22 2012 +0900
@@ -134,18 +134,35 @@
                     '/usr/lib/debug/ld-linux-x86-64.so.2',
                     '/usr/lib/debug/lib/ld-linux.so.2.debug',
                     '/usr/lib/debug/ld-linux.so.2',
-                    # ubuntu 1110
+                    # ubuntu 1104/1110
+                    '/usr/lib/debug/lib/i386-linux-gnu/ld-2.13.so',
                     '/usr/lib/debug/lib/x86_64-linux-gnu/ld-2.13.so',
                     # for ubuntu 0910. braindead
                     '/usr/lib/debug/lib/ld-2.10.1.so',
+                    # for ubuntu 1004.
+                    '/usr/lib/debug/lib/ld-2.11.1.so',
+                    # for ubuntu 1010.
+                    '/usr/lib/debug/lib/ld-2.12.1.so',
                     # ubuntu 1204
                     '/usr/lib/debug/lib/x86_64-linux-gnu/ld-2.15.so'
+                    '/usr/lib/debug/lib/i386-linux-gnu/ld-2.15.so'
                     ]
     for file in files_to_try:
         if os.path.isfile (file):
             return file
     
     raise CouldNotFindFile ()
+
+def list_lib_path():
+    paths = ""
+    re_lib = re.compile ('(?<=^#)')
+    for filename in os.listdir("/etc/ld.so.conf.d/"):
+        for line in open ("/etc/ld.so.conf.d/" + filename, 'r'):
+            if re_lib.search (line) is not None:
+                continue
+            paths += (":" + line.rstrip ())
+
+    return paths
         
 def usage():
     print ''
@@ -185,6 +202,11 @@
         sys.exit (1)
     config.write ('#define CONFIG_RTLD_GLOBAL_RO_SIZE ' + str(data.data) + '\n')
 
+    data = debug.get_struct_member_offset ('rtld_global_ro', '_dl_pagesize')
+    if data is None:
+        sys.exit (1)
+    config.write ('#define CONFIG_RTLD_DL_PAGESIZE_OFFSET ' + str(data.data) + '\n')
+
     data = debug.get_struct_member_offset ('rtld_global', '_dl_error_catch_tsd')
     if data is None:
         sys.exit (1)
@@ -220,6 +242,8 @@
         sys.exit (1)
     config.write ('#define CONFIG_TCB_STACK_GUARD ' + str(data.data) + '\n')
 
+    config.write ('#define CONFIG_SYSTEM_LDSO_LIBRARY_PATH \"' + list_lib_path () + '\"\n')
+
 if __name__ == "__main__":
     main(sys.argv[1:])
 
diff -r 319dc814102b glibc.c
--- a/glibc.c	Mon Jun 18 09:09:15 2012 +0200
+++ b/glibc.c	Thu Sep 27 23:43:22 2012 +0900
@@ -67,7 +67,10 @@
 // and how this symbol is imported by libc.so
 EXPORT char **_dl_argv;
 
-EXPORT char _rtld_global_ro[CONFIG_RTLD_GLOBAL_RO_SIZE];
+static char _rtld_local_ro[CONFIG_RTLD_GLOBAL_RO_SIZE];
+// and, then, we define the exported symbol as an alias to the local symbol.
+extern __typeof (_rtld_local_ro) _rtld_global_ro __attribute__ ((alias("_rtld_local_ro"),
+                                                                 visibility("default")));
 // We have to define first a local symbol to ensure that all references
 // to this symbol do not go through the GOT.
 static char _rtld_local[CONFIG_RTLD_GLOBAL_SIZE];
@@ -223,6 +226,9 @@
   void **(*fn) (void) = vdl_dl_error_catch_tsd;
   char *dst = &_rtld_local[CONFIG_DL_ERROR_CATCH_TSD_OFFSET];
   vdl_memcpy ((void*)dst, &fn, sizeof (fn));
+  char *off = &_rtld_local_ro[CONFIG_RTLD_DL_PAGESIZE_OFFSET];
+  int pgsz = system_getpagesize ();
+  vdl_memcpy (off, &pgsz, sizeof (pgsz));
 }
 
 
@@ -235,6 +241,7 @@
 // Typically called by malloc to lookup ptmalloc_init.
 // In this case, symbolp is 0.
 int
+internal_function
 _dl_addr_hack (const void *address, Dl_info *info,
 	       void **mapp, const ElfW(Sym) **symbolp)
 {
diff -r 319dc814102b i386/machine.c
--- a/i386/machine.c	Mon Jun 18 09:09:15 2012 +0200
+++ b/i386/machine.c	Thu Sep 27 23:43:22 2012 +0900
@@ -335,7 +335,11 @@
     "/lib:" 
     "/lib32:"
     "/usr/lib:"
-    "/usr/lib32";
+    "/usr/lib32:"
+    "/usr/lib/i386-linux-gnu:"
+    "/lib/i386-linux-gnu"
+    CONFIG_SYSTEM_LDSO_LIBRARY_PATH
+    ;
   return dirs;
 }
 
diff -r 319dc814102b test/Makefile
--- a/test/Makefile	Mon Jun 18 09:09:15 2012 +0200
+++ b/test/Makefile	Thu Sep 27 23:43:22 2012 +0900
@@ -5,7 +5,7 @@
 CXXFLAGS=$(CFLAGS)
 LDFLAGS=-Wl,--warn-unresolved-symbols -L. -Wl,--no-as-needed
 LINKER=$(CC)
-MACHINE_MAKEFILE=Makefile.$(shell uname -p)
+MACHINE_MAKEFILE=Makefile.$(shell uname -m)
 
 include $(SRCDIR)$(MACHINE_MAKEFILE)
 
@@ -111,4 +111,4 @@
 	-rm -f *.o *~ 2>/dev/null
 	-rm -f $(TARGETS) 2>/dev/null
 	-rm -f $(addprefix $(OUTPUT_DIR)/,$(TESTS)) 2>/dev/null
-	-rm -f $(addsuffix -ldso,$(TESTS)) 2>/dev/null
\ No newline at end of file
+	-rm -f $(addsuffix -ldso,$(TESTS)) 2>/dev/null
diff -r 319dc814102b x86_64/machine.c
--- a/x86_64/machine.c	Mon Jun 18 09:09:15 2012 +0200
+++ b/x86_64/machine.c	Thu Sep 27 23:43:22 2012 +0900
@@ -7,6 +7,7 @@
 #include "local-elf.h"
 #include "syscall.h"
 #include "vdl-file.h"
+#include "vdl-config.h"
 #include <sys/mman.h>
 #include <sys/mman.h>
 #include <asm/prctl.h> // for ARCH_SET_FS
@@ -255,6 +256,7 @@
     "/lib/x86_64-linux-gnu:"
     "/usr/lib64:"
     "/usr/lib/x86_64-linux-gnu:"
+    CONFIG_SYSTEM_LDSO_LIBRARY_PATH
     ;
   return dirs;
 }
